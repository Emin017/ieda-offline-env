diff --git a/src/operation/iDRC/interface/DRCInterface.hpp b/src/operation/iDRC/interface/DRCInterface.hpp
index a83fce36f..9113680ef 100644
--- a/src/operation/iDRC/interface/DRCInterface.hpp
+++ b/src/operation/iDRC/interface/DRCInterface.hpp
@@ -30,7 +30,7 @@ namespace idb {
 class IdbNet;
 class IdbLayerRouting;
 class IdbLayerCut;
-enum class IdbLayerDirection : uint8_t;
+enum class IdbLayerDirection;
 }  // namespace idb
 
 namespace idrc {

diff --git a/src/operation/iDRC/source/toolkit/utility/Utility.hpp b/src/operation/iDRC/source/toolkit/utility/Utility.hpp
index 2283de1a6..84e050403 100644
--- a/src/operation/iDRC/source/toolkit/utility/Utility.hpp
+++ b/src/operation/iDRC/source/toolkit/utility/Utility.hpp
@@ -236,9 +236,9 @@ class Utility
   static Rotation getRotation(GTLPolyInt& gtl_poly)
   {
     gtl::direction_1d gtl_rotation = gtl::winding(gtl_poly);
-    if (gtl::direction_1d_enum::CLOCKWISE == gtl_rotation) {
+    if (gtl::direction_1d(gtl::direction_1d_enum::CLOCKWISE) == gtl_rotation) {
       return Rotation::kClockwise;
-    } else if (gtl::direction_1d_enum::COUNTERCLOCKWISE == gtl_rotation) {
+    } else if (gtl::direction_1d(gtl::direction_1d_enum::COUNTERCLOCKWISE) == gtl_rotation) {
       return Rotation::kCounterclockwise;
     } else {
       return Rotation::kNone;
@@ -248,9 +248,9 @@ class Utility
   static Rotation getRotation(GTLHolePolyInt& gtl_holy_poly)
   {
     gtl::direction_1d gtl_rotation = gtl::winding(gtl_holy_poly);
-    if (gtl::direction_1d_enum::CLOCKWISE == gtl_rotation) {
+    if (gtl::direction_1d(gtl::direction_1d_enum::CLOCKWISE) == gtl_rotation) {
       return Rotation::kClockwise;
-    } else if (gtl::direction_1d_enum::COUNTERCLOCKWISE == gtl_rotation) {
+    } else if (gtl::direction_1d(gtl::direction_1d_enum::COUNTERCLOCKWISE) == gtl_rotation) {
       return Rotation::kCounterclockwise;
     } else {
       return Rotation::kNone;

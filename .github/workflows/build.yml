name: "Build iEDA Offline Environment"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  check:
    name: Check on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Flake check
        run: nix flake check --all-systems

  buildBin:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Build iEDA
        run: nix build -L '.#ieda'
      - name: Upload iEDA Binary
        uses: actions/upload-artifact@v4.6.1
        with:
          name: iEDA-binary
          path: result/bin/*

  buildBundle:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Build iEDA Bundle
        run: nix bundle -L --bundler github:NixOS/bundlers#toRPM '.#ieda'
      - name: Upload ieda offline bundle
        uses: actions/upload-artifact@v4.6.1
        with:
          name: iEDA-Offline-Bundle-rpm
          path: rpm-single-nix-env-wrapper-bin-nix-env-wrapper/*.rpm

  buildDocker:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Build iEDA Release Docker
        run: nix build -L '.#releaseDocker'
      - name: Upload iEDA Release Docker
        uses: actions/upload-artifact@v4.6.1
        with:
          name: iEDA-Release-Docker
          path: result